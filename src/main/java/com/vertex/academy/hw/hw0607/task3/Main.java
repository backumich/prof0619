/*  Task3
Второй вариант ​под кодовым названием “Ананасовый завод”:
Предположим, у нас есть завод, который перерабатывает фрукты.

--Есть фрукты (яблоки, ананасы, персики), у фрукта есть:
 - сладость
 - водянистость
 - масса
Давайте сделаем один энам с типами фруктов и один класс, который будет уже фруктом, как таковым.
Фрукт предлагаю сделать ​имьютабл​, потому что сладость, водянистость и тип фрукта не меняются со временем.

--Есть фруктовая консерва(еще один класс). В нее добавляют фрукт, воду (или не добавляют, потому что хватает и сока)
и сахар (тоже не факт, если фрукт достаточно сладкий). Предположим, что химии там нет).
Давайте для простоты инициализации сделаем консерве ​билдер​.

--Еесть цех по производству фруктовых консервов. Он цех простой - видит фрукт, делает консерву (смахивает на ​фактори​)
Нужен нам он один, поэтому пусть будет ​синглтон.

--Сам завод (отдельный класс) давайте сделаем ​оберткой (декоратором)​ над цехом, потому что он не только консервы делает,
но и фруктозу производит (сделаем ему отдельный метод, который принимает фрукты, производит 80% фруктозы от сладости
в фруктах)

--Делали мы так делали, пока не попался недобросовестный поставщик и не привез полугнилые фрукты. Поэтому руководство
завода приняло решение делать проверку фруктов до того, как делать из них консервы. Для этого было принято решение
не менять то, как работает консервный цех, а добавить проверку вне цеха. Для этого нужно написать ​прокси​ для этого цеха,
которыйбудет брать фрукт, проверять водянистость (пусть будет больше 30%) и если водянистость маленькая, то говорить,
что фрукт гнилой (писать просто вконсоль, что яблоко сгнило), а если фрукт нормальный, то он передается цеху,
тот делает консерву, которую прокси и возвращает.

Все результаты (к примеру - создание объекта, принятие решения и т.п.) выводите в консоль.
 */

package com.vertex.academy.hw.hw0607.task3;


public class Main {
    public static void main(String[] args) {

    }
}
